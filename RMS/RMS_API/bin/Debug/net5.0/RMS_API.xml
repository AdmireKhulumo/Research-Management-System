<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RMS_API</name>
    </assembly>
    <members>
        <member name="T:RMS_API.Controllers.BookChapterController">
            <summary>
            Performs CRUD operations on a book chapter
            </summary>
        </member>
        <member name="M:RMS_API.Controllers.BookChapterController.Get">
            <summary>
            Get all book chapter records in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMS_API.Controllers.BookChapterController.Get(System.Int32)">
            <summary>
            Get all book chapters belonging to a specific project.
            </summary>
            <remarks>Can be empty if <paramref name="pId"/> supplied has no associated book chapters</remarks>
            <param name="pId">Project ID</param>
            <returns>List of BookChapter objects</returns>
        </member>
        <member name="M:RMS_API.Controllers.BookChapterController.Post(RMS_API.Models.BookChapter)">
            <summary>
            Add a book chapter to a specific project.
            </summary>
            <param name="bk">Book chapter's details</param>
        </member>
        <member name="M:RMS_API.Controllers.BookChapterController.Edit(RMS_API.Models.BookChapter,System.String,System.String)">
            <summary>
            Edit a book chapter record.
            </summary>
            <remarks>Record found using <paramref name="old_bkTitle"/> and <paramref name="old_chTitle"/> which make up the primary key.</remarks>
            <param name="bk">Book chapter's new details</param>
            <param name="old_chTitle">Current chapter title (might be changed)</param>
            <param name="old_bkTitle">Current book title (might be changed)</param>
        </member>
        <member name="M:RMS_API.Controllers.BookChapterController.Delete(System.String,System.String)">
            <summary>
            Delete a book chapter record from the database.
            </summary>
            <remarks><paramref name="bkTitle"/> and <paramref name="chTitle"/> used to uniquely identify the record</remarks>
            <param name="bkTitle">Book's title</param>
            <param name="chTitle">Chapter's title</param>
        </member>
        <member name="T:RMS_API.Controllers.CArticleController">
            <summary>
            Performs CRUD operations on a conference article.
            </summary>
        </member>
        <member name="M:RMS_API.Controllers.CArticleController.Get">
            <summary>
            Get all conference articles in the database.
            </summary>
            <returns>List of conference articles</returns>
        </member>
        <member name="M:RMS_API.Controllers.CArticleController.Get(System.Int32)">
            <summary>
            Get conference articles belonging to a specifc project ID.
            </summary>
            <remarks>Can be empty if project has no conference articles</remarks>
            <param name="pId">Project ID</param>
            <returns>List of conference articles</returns>
        </member>
        <member name="M:RMS_API.Controllers.CArticleController.Post(RMS_API.Models.CArticle)">
            <summary>
            Add conference article to a specific project.
            </summary>
            <param name="ca">Conference article's details</param>
        </member>
        <member name="M:RMS_API.Controllers.CArticleController.Edit(RMS_API.Models.CArticle,System.String,System.String)">
             <summary>
             Edit a conference article's details.
             </summary>
            <remarks><paramref name="old_cname"/> and <paramref name="old_title"/> are used to uniquely identify the record.</remarks>
             <param name="ca">Conference article's new details</param>
             <param name="old_title">Current conference article title (could be changed)</param>
             <param name="old_cname">Current conference name (could be changed)</param>
        </member>
        <member name="M:RMS_API.Controllers.CArticleController.Delete(System.String,System.String)">
            <summary>
            Delete a conference article record from the database.
            </summary>
            <remarks><paramref name="cname"/> and <paramref name="title"/> are used to uniquely identify the record.</remarks>
            <param name="cname">Conference name</param>
            <param name="title">Article's title</param>
        </member>
        <member name="T:RMS_API.Controllers.EditorialController">
            <summary>
            Performs CRUD operations on editorials.
            </summary>
        </member>
        <member name="M:RMS_API.Controllers.EditorialController.Get">
            <summary>
            Get all editorials in the database.
            </summary>
            <returns>List of editorials</returns>
        </member>
        <member name="M:RMS_API.Controllers.EditorialController.Get(System.Int32)">
            <summary>
            Get all editorials done by a certain employee.
            </summary>
            <param name="empId">Employee ID</param>
            <returns>List of editorials</returns>
        </member>
        <member name="M:RMS_API.Controllers.EditorialController.Post(RMS_API.Models.Editorial,System.Int32)">
            <summary>
            Add editorial done by a specific employee.
            </summary>
            <param name="ed">Editorial's details</param>
            <param name="empId">Employee ID</param>
        </member>
        <member name="M:RMS_API.Controllers.EditorialController.Edit(RMS_API.Models.Editorial,System.String,System.String)">
            <summary>
            Edit an editorial's details.
            </summary>
            <remarks><paramref name="old_activity"/> and <paramref name="old_publication"/> are used to uniquly identify the existing record in the database.</remarks>
            <param name="ed"></param>
            <param name="old_activity">Current activity details (could be changed)</param>
            <param name="old_publication">Current publication details (could be changed)</param>
        </member>
        <member name="M:RMS_API.Controllers.EditorialController.Delete(System.String,System.String)">
            <summary>
            Delete an editorial record from the database.
            </summary>
            <remarks><paramref name="activity"/> and <paramref name="publication"/> are used to uniquely identify the record.</remarks>
            <param name="activity"></param>
            <param name="publication"></param>
        </member>
        <member name="T:RMS_API.Controllers.EmployeeController">
            <summary>
            Performs CRUD operations on an employee.
            </summary>
        </member>
        <member name="M:RMS_API.Controllers.EmployeeController.Get">
            <summary>
            Get all employees in the database.
            </summary>
            <returns>List of employees.</returns>
        </member>
        <member name="M:RMS_API.Controllers.EmployeeController.Get(System.String,System.Int32)">
            <summary>
            Get a specific employee record.
            </summary>
            <remarks>Employee identified using their unique email address or employee ID.</remarks>
            <param name="email">Email Address</param>
            <param name="empId">Employee ID</param>
            <returns>List with one or zero Employee objects</returns>
        </member>
        <member name="M:RMS_API.Controllers.EmployeeController.AddEmployee(RMS_API.Models.Employee)">
            <summary>
            Add an employee to the database.
            </summary>
            <param name="e">Employee's details</param>
        </member>
        <member name="M:RMS_API.Controllers.EmployeeController.EditEmployee(RMS_API.Models.Employee)">
            <summary>
            Edit an employee record.
            </summary>
            <remarks>Employee identified using their empId</remarks>
            <param name="e">Employee's details</param>
        </member>
        <member name="M:RMS_API.Controllers.EmployeeController.GetAuthors(System.String,System.String,System.String)">
            <summary>
            Get authors of a publication. Used by all publication types.
            </summary>
            <remarks>
            <list type="bullet">
                <item>An author is an employee.</item>
                <item><paramref name="type"/> identifies the type of publication</item>
                <item><paramref name="id1"/> and <paramref name="id2"/> uniquely identify the record.</item>
            </list>
            </remarks>
            <param name="id1">journal name, conferance name, or book title</param>
            <param name="id2">article title or chapter title</param>
            <param name="type">Type of publication: jArticle, cArticle, or bookChapter</param>
            <returns>List of Employee objects.</returns>
        </member>
        <member name="M:RMS_API.Controllers.EmployeeController.AddAuthor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Associate an author with a publication they wrote.
            </summary>
            <remarks>
            <list type="bullet">
                <item>An author is an employee.</item>
                <item><paramref name="type"/> identifies the type of publication</item>
                <item><paramref name="id1"/> and <paramref name="id2"/> uniquely identify the record.</item>
            </list>
            </remarks>
            <param name="empId">Employee ID</param>
            <param name="id1">journal name, conferance name, or book title</param>
            <param name="id2">article title or chapter title</param>
            <param name="type">Type of publication: jArticle, cArticle, or bookChapter</param>
        </member>
        <member name="M:RMS_API.Controllers.EmployeeController.GetEditors(System.String,System.String)">
            <summary>
            Get editors/reviewers of an editorial
            </summary>
            <remarks>
            <list type="bullet">
                <item>An editor is an employee. </item>
                <item><paramref name="activity"/> and <paramref name="publication"/> are used to uniquely identify the record.</item>
            </list>
            </remarks>
            <param name="activity"></param>
            <param name="publication"></param>
            <returns>List of Employee objects.</returns>
        </member>
        <member name="T:RMS_API.Controllers.FunderController">
            <summary>
            Performs CRUD operations on a project funder
            </summary>
        </member>
        <member name="M:RMS_API.Controllers.FunderController.Get">
            <summary>
            Get all project funders in the database.
            </summary>
            <returns>List of funders</returns>
        </member>
        <member name="M:RMS_API.Controllers.FunderController.Get(System.Int32)">
            <summary>
            Get funders of a specific project
            </summary>
            <remarks>Cannot be empty because each project has at least one funder.</remarks>
            <param name="pId"></param>
            <returns>List of project funders</returns>
        </member>
        <member name="M:RMS_API.Controllers.FunderController.Add(RMS_API.Models.Funder,System.Int32)">
            <summary>
            Add a funder to a certain project.
            </summary>
            <remarks><paramref name="pId"/> is used to associate a funder to a project.</remarks>
            <param name="fu">Funder's details</param>
            <param name="pId">Project ID</param>
        </member>
        <member name="M:RMS_API.Controllers.FunderController.Add(RMS_API.Models.Funder)">
            <summary>
            Edit a funder's details.
            </summary>
            <remarks>Funder identified using the fId supplied</remarks>
            <param name="fu">Funder's details.</param>
        </member>
        <member name="M:RMS_API.Controllers.FunderController.Delete(System.Int32,System.Int32)">
            <summary>
            Delete a funder from a specified project.
            </summary>
            <remarks><paramref name="pId"/> identifies the project from which to remove the funder.</remarks>
            <param name="pId">Project ID</param>
            <param name="fId">Funder's ID</param>
        </member>
        <member name="T:RMS_API.Controllers.JArticleController">
            <summary>
            Performs CRUD operations on a journal article.
            </summary>
        </member>
        <member name="M:RMS_API.Controllers.JArticleController.Get">
            <summary>
            Get all journal articles in the database.
            </summary>
            <returns>List of journal articles</returns>
        </member>
        <member name="M:RMS_API.Controllers.JArticleController.Get(System.Int32)">
            <summary>
            Get journal articles belonging to a specifc project ID.
            </summary>
            <remarks>Can be empty if project has no journal articles.</remarks>
            <param name="pId">Project ID</param>
            <returns>List of journal articles</returns>
        </member>
        <member name="M:RMS_API.Controllers.JArticleController.Post(RMS_API.Models.JArticle)">
            <summary>
            Add journal article to a specific project.
            </summary>
            <param name="ja">Journal article's details</param>
        </member>
        <member name="M:RMS_API.Controllers.JArticleController.Edit(RMS_API.Models.JArticle,System.String,System.String)">
            <summary>
            Edit a journal article's details.
            </summary>
            <remarks><paramref name="old_jname"/> and <paramref name="old_title"/> are used to uniquely identify the record.</remarks>
            <param name="ja">Journal article's new details</param>
            <param name="old_title">Current journal article title (could be changed)</param>
            <param name="old_jname">Current journal name (could be changed)</param>
        </member>
        <member name="M:RMS_API.Controllers.JArticleController.Delete(System.String,System.String)">
            <summary>
            Delete a journal article record from the database.
            </summary>
            <remarks><paramref name="jname"/> and <paramref name="title"/> are used to uniquely identify the record.</remarks>
            <param name="jname">Journal name</param>
            <param name="title">Article's title</param>
        </member>
        <member name="T:RMS_API.Controllers.ProjectController">
            <summary>
            Performs CRUD operations on projects in the database.
            </summary>
        </member>
        <member name="M:RMS_API.Controllers.ProjectController.Get">
            <summary>
            Get All Projects in BIUST.
            </summary>
            <returns>
            List of Projects
            </returns>
        </member>
        <member name="M:RMS_API.Controllers.ProjectController.Get(System.Int32)">
            <summary>
            Get All Projects done by a certain employee.
            </summary>
            <remarks> Could be an empty list if <paramref name="empId"/> is not found. </remarks>
            <returns>
            List of Projects
            </returns>
            <param name="empId">Employee ID Number</param>
        </member>
        <member name="M:RMS_API.Controllers.ProjectController.Post(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Add a project done by a certain employee.
            </summary>
            <param name="title">Title of the project</param>
            <param name="leader">Project leader's employee ID</param>
            <param name="famount">Funding amount</param>
            <param name="fsource">Source of funding</param>
            <param name="empId">Employee ID</param>
            <param name="fId">Funder's ID</param>
        </member>
        <member name="M:RMS_API.Controllers.ProjectController.Edit(System.String,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Edit an existing project's details.
            </summary>
            <param name="title">Title of the project</param>
            <param name="leader">Project leader's employee ID</param>
            <param name="famount">Funding amount</param>
            <param name="fsource">Source of funding</param>
            <param name="pId">Project ID</param>
        </member>
        <member name="M:RMS_API.Controllers.ProjectController.Delete(System.Int32)">
            <summary>
            Delete a project from the database.
            </summary>
            <remarks>Finds project using the <paramref name="pId"/> supplied.</remarks>
            <param name="pId"></param>
        </member>
    </members>
</doc>
